{"componentChunkName":"component---src-templates-blog-post-js","path":"/django_blog/","webpackCompilationHash":"fe4b98b4e443afde89a7","result":{"data":{"mdx":{"id":"7ae3aba3-fbb5-51a0-ad6d-f6e934a65b07","excerpt":"环境 python3、pip3 pipenv 安装以来 项目初始化","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Django 构建博客\",\n  \"date\": \"2020-11-16T00:00:00.000Z\",\n  \"tags\": \"python,django\",\n  \"description\": \"通过 Django 构建博客。\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u73AF\\u5883\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"python3\\u3001pip3\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pipenv\")), mdx(\"h2\", null, \"\\u5B89\\u88C5\\u4EE5\\u6765\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# Install pipenv\\npython3 -m pip install pipenv\\n# Add PATH\\uFF08\\u4E34\\u65F6\\u751F\\u6548\\uFF09\\nexport PATH=$PATH:/Library/Frameworks/Python.framework/Versions/3.9/bin\\n# Or (\\u9700\\u8981\\u91CD\\u542F)\\nsudo vim /etc/paths\\npipenv --version\\n# Output: pipenv, version 2020.11.15\\n\")), mdx(\"h2\", null, \"\\u9879\\u76EE\\u521D\\u59CB\\u5316\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"mkdir django_pipenv_project\\n\\n# \\u751F\\u6210Pipfile\\u548CPipfile.lock\\uFF0C\\u521B\\u5EFA\\u865A\\u62DF\\u73AF\\u5883\\uFF0C\\u81EA\\u52A8\\u751F\\u6210\\u4E00\\u4E2A\\u968F\\u673A\\u7684\\u865A\\u62DF\\u73AF\\u5883\\u76EE\\u5F55\\u540D\\npipenv install\\n\\n# \\u6FC0\\u6D3B\\u865A\\u62DF\\u73AF\\u5883\\npipenv shell\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"环境","depth":2},{"value":"安装以来","depth":2},{"value":"项目初始化","depth":2}],"frontmatter":{"title":"Django 构建博客","date":"2020-11-16","description":"通过 Django 构建博客。"}},"file":{"relativePath":"django_blog.pdf","publicURL":"/blog/static/django_blog-21a093c5c3187d26a10fcd6a6a880ac7.pdf"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/django_blog/","previous":{"fields":{"slug":"/electron-tray/"},"frontmatter":{"title":"Electron 应用处理长任务"}},"next":{"fields":{"slug":"/node-stream-download/"},"frontmatter":{"title":"Node Stream 下载"}}}}}