{"componentChunkName":"component---src-templates-blog-post-js","path":"/express-redis/","webpackCompilationHash":"fe4b98b4e443afde89a7","result":{"data":{"mdx":{"id":"c7f4be6e-2c5b-5b56-9d26-7a79eb3c496b","excerpt":"构建需要的镜像 构建执行环境 通过 Redis 镜像启动一个 Redis 的 Container 创建 app.js， 启动 8000 端口监听 启动一个 Container 安装依赖包 -w 参数表示命令执行的当前工作目录，屏幕会打印依赖包的安装过程。等依赖安装完成，这个 Container…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Docker 启动 Redis\",\n  \"date\": \"2018-11-09T00:00:00.000Z\",\n  \"tags\": \"Docker, Database\",\n  \"description\": \"使用 Docker 在 Node 服务中添加 Redis。\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u6784\\u5EFA\\u9700\\u8981\\u7684\\u955C\\u50CF\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker pull redis\\ndocker pull node\\n# \\u542F\\u52A8 node\\ndocker run -it node /bin/bash\\nnpm install pm2 -g\\nnpm install cnpm -g --registry=https://registry.npm.taobao.org\\nexit\\n\\n# \\u53D1\\u5E03\\u955C\\u50CF\\ndocker login\\n# \\u628A Container \\u63D0\\u4EA4\\u4E3A Images\\ndocker commit uuid wkl/node_pm2\\n# \\u67E5\\u770B Images \\u5217\\u8868\\ndocker images node_pm2\\n# \\u628A\\u955C\\u50CF\\u63D0\\u4EA4\\u5230\\u4E91\\u4E0A\\ndocker push wkl/node_pm2\\n\")), mdx(\"h2\", null, \"\\u6784\\u5EFA\\u6267\\u884C\\u73AF\\u5883\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u901A\\u8FC7 Redis \\u955C\\u50CF\\u542F\\u52A8\\u4E00\\u4E2A Redis \\u7684 Container\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker run --name redis-server -d redis redis-server --appendonly yes\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u521B\\u5EFA app.js\\uFF0C \\u542F\\u52A8 8000 \\u7AEF\\u53E3\\u76D1\\u542C\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"var express = require('express');\\nvar redis = require('redis');\\n\\nvar app = express();\\n\\n// \\u4ECE\\u73AF\\u5883\\u53D8\\u91CF\\u4E2D\\u8BFB\\u53D6 Redis \\u670D\\u52A1\\u5668\\u7684 IP \\u5730\\u5740\\nvar redisHost = process.env['REDIS_PORT_6379_TCP_ADDR'];\\nvar redisPort = process.env['REDIS_PORT_6379_TCP_PORT'];\\n\\nvar redisClient = redis.createClient(redisPort, redisHost);\\n\\napp.get('/', function(req, res) {\\n  console.log('get request');\\n  redisClient.get('access_count', function(err, countNum) {\\n    if (err) {\\n      return res.send('get access count error');\\n    }\\n    if (!countNum) {\\n      countNum = 1;\\n    } else {\\n      countNum = parseInt(countNum) + 1;\\n    }\\n    redisClient.set('access_count', countNum, function(err) {\\n      if (err) {\\n        return res.send('set access count error');\\n      }\\n      res.send(countNum.toString());\\n    });\\n  });\\n});\\n\\napp.listen(8000);\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u542F\\u52A8\\u4E00\\u4E2A Container \\u5B89\\u88C5\\u4F9D\\u8D56\\u5305\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker run --rm \\\\\\n -itv /current_dir/express_test:/var/node/docker_node \\\\\\n -w /var/node/docker_node \\\\\\n wkl/node_pm2 \\\\\\n npm install\\n\")), mdx(\"p\", null, \"-w \\u53C2\\u6570\\u8868\\u793A\\u547D\\u4EE4\\u6267\\u884C\\u7684\\u5F53\\u524D\\u5DE5\\u4F5C\\u76EE\\u5F55\\uFF0C\\u5C4F\\u5E55\\u4F1A\\u6253\\u5370\\u4F9D\\u8D56\\u5305\\u7684\\u5B89\\u88C5\\u8FC7\\u7A0B\\u3002\\u7B49\\u4F9D\\u8D56\\u5B89\\u88C5\\u5B8C\\u6210\\uFF0C\\u8FD9\\u4E2A Container \\u4F1A\\u81EA\\u52A8\\u9000\\u51FA\\u3002\\n\\u5982\\u679C\\u51FA\\u73B0 EACCESS \\u7684\\u6743\\u9650\\u9519\\u8BEF\\uFF0C\\u53EF\\u4EE5\\u6267\\u884C\\u547D\\u4EE4\\u8BB8\\u53EF SELinux \\u7684\\u5DE5\\u4F5C\\u72B6\\u6001\\u3002\\u8FD9\\u4E2A\\u53EA\\u662F\\u4E34\\u65F6\\u4FEE\\u6539\\uFF0C\\u91CD\\u542F\\u7CFB\\u7EDF\\u4F1A\\u6062\\u590D\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"su -c \\\"setenforce 0\\\"\\n\")), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u542F\\u52A8\\u4E00\\u4E2A Container \\u8FD0\\u884C\\u7A0B\\u5E8F\\uFF0C\\u8981\\u6C42\\u8FD9\\u4E2A Conteiner \\u6709\\u4EE5\\u4E0B\\u8981\\u6C42\\uFF1A\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u7AEF\\u53E3\\u6620\\u5C04\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u6587\\u4EF6\\u6302\\u8F7Dlog\\u3001code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u52A0\\u8F7D Redis \\u7684 Container\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker run -d \\\\\\n  --name 'nodeCount' \\\\\\n  -p 8000:8000 \\\\\\n  -v /current_dir/express_test:/var/node/docker_node \\\\\\n  -v /current_dir/log/pm2:/root/.pm2/logs \\\\\\n  --link redis-server:redis \\\\\\n  -w /var/node/docker_node/ \\\\\\n  wkl/node_pm2 \\\\\\n  pm2 start app.js\\n\")), mdx(\"p\", null, \"\\u6267\\u884C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker ps\"), \" \\u53D1\\u73B0\\u8FD9\\u4E2A Container \\u5E76\\u6CA1\\u6709\\u542F\\u52A8\\uFF0C\\u8FD9\\u662F\\u5229\\u7528 pm2 \\u7684\\u5B88\\u62A4\\u8FDB\\u7A0B\\u542F\\u52A8\\u4E86\\u5E94\\u7528\\uFF0CContainer \\u8BA4\\u4E3A\\u8FDB\\u7A0B\\u5DF2\\u7ECF\\u8FD0\\u884C\\u7ED3\\u675F\\u3002\\u53EF\\u4EE5\\u505A\\u4E00\\u4E9B\\u8C03\\u6574\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker run -d \\\\\\n  --name 'nodeCount' \\\\\\n  -p 8000:8000 \\\\\\n  -v /current_dir/express_test:/var/node/docker_node \\\\\\n  -v /current_dir/log/pm2:/root/.pm2/logs \\\\\\n  --link redis-server:redis \\\\\\n  -w /var/node/docker_node/ \\\\\\n  wkl/node_pm2 \\\\\\n  pm2 start --no-daemon app.js\\n\")), mdx(\"p\", null, \"\\u5728\\u6267\\u884C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker ps\"), \",\\u53EF\\u4EE5\\u770B\\u5230\\u5BF9\\u5E94\\u7684 Container\"), mdx(\"ol\", {\n    \"start\": 5\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u4F7F\\u7528 Nginx \\u505A\\u53CD\\u5411\\u4EE3\\u7406\\n\\u5F85\\u7EED\\u3002\\u3002\\u3002\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"构建需要的镜像","depth":2},{"value":"构建执行环境","depth":2}],"frontmatter":{"title":"Docker 启动 Redis","date":"2018-11-09","description":"使用 Docker 在 Node 服务中添加 Redis。"}},"file":{"relativePath":"express-redis.pdf","publicURL":"/blog/static/express-redis-2f626035718330a548be20d44e5692c7.pdf"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/express-redis/","previous":{"fields":{"slug":"/prisma-starter/"},"frontmatter":{"title":"全栈 --- 启动 Prisma 项目"}},"next":{"fields":{"slug":"/jenkins/"},"frontmatter":{"title":"Docker 启动 Jenkins 服务"}}}}}