{"componentChunkName":"component---src-templates-blog-post-js","path":"/react-virtual-list/","webpackCompilationHash":"fe4b98b4e443afde89a7","result":{"data":{"mdx":{"id":"8d0af77f-f512-50c3-8d4a-7c153af9b030","excerpt":"react-virtualized  源码 注释翻译 It is inefficient to create and manage a large list of DOM elements within a scrolling container if only a few of those elements are…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Virtual List By React\",\n  \"date\": \"2019-08-22T00:00:00.000Z\",\n  \"tag\": \"React, Component\",\n  \"description\": \"Virtual List By React\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"react-virtualized \", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"https://github.com/bvaughn/react-virtualized/blob/master/source/List/List.js\"\n  }), \"\\u6E90\\u7801\")), mdx(\"h2\", null, \"\\u6CE8\\u91CA\\u7FFB\\u8BD1\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"It is inefficient to create and manage a large list of DOM elements within a scrolling container if only a few of those elements are visible.\\nThe primary purpose of this component is to improve performance by only rendering the DOM nodes that a user is able to see based on their current scroll position.\\nThis component renders a virtualized list of elements with either fixed or dynamic heights.\")), mdx(\"p\", null, \"\\u5C11\\u6570\\u5143\\u7D20\\u53EF\\u89C1\\uFF0C\\u5728\\u6EDA\\u52A8\\u8FC7\\u7A0B\\u4E2D\\u521B\\u5EFA\\u5E76\\u7BA1\\u7406\\u5927\\u91CF \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DOM\"), \" \\u5143\\u7D20\\u4F1A\\u5F71\\u54CD\\u6548\\u7387\\uFF08inefficient\\uFF09\\u3002\\u7EC4\\u4EF6\\u76EE\\u7684\\u5728\\u4E8E\\u7528\\u6237\\u80FD\\u591F\\u6839\\u636E\\u5F53\\u524D\\u6EDA\\u52A8\\u4F4D\\u7F6E\\u67E5\\u770B \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DOM\"), \" \\u8282\\u70B9\"), mdx(\"h2\", null, \"\\u6D41\\u7A0B\"), mdx(\"p\", null, \"onScroll \\u6EDA\\u52A8\\u76D1\\u542C\\n=>\\n\\u8BA1\\u7B97\\u786E\\u5B9A data \\u4E2D\\u9700\\u8981\\u6E32\\u67D3\\u6570\\u636E\\u7684\\u8D77\\u59CB\\u3001\\u7ED3\\u675F\\u4F4D\\u7F6E\\nattachItems \\u6E32\\u67D3\\u5143\\u7D20\\nrowRenderer \"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"react-virtualized 源码","depth":2},{"value":"注释翻译","depth":2},{"value":"流程","depth":2}],"frontmatter":{"title":"Virtual List By React","date":"2019-08-22","description":"Virtual List By React"}},"file":{"relativePath":"react-virtual-list.pdf","publicURL":"/blog/static/react-virtual-list-af38bbebcf95648b54a2cfe6c0c41c3f.pdf"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-virtual-list/","previous":{"fields":{"slug":"/node-cli/"},"frontmatter":{"title":"Node Cli"}},"next":{"fields":{"slug":"/react-typescript/"},"frontmatter":{"title":"Typescript use in React"}}}}}