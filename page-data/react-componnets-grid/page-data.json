{"componentChunkName":"component---src-templates-blog-post-js","path":"/react-componnets-grid/","webpackCompilationHash":"fe4b98b4e443afde89a7","result":{"data":{"mdx":{"id":"448c6960-d019-5620-a329-633cc9675c1c","excerpt":"使用 Bootstrap 使用 Bootstrap 构建 24 栅格系统 添加 bootstrap sass 依赖 添加两个文件  bootstrap.scss 、 bootstrap-custom.scss ,并引入 bootstrap 默认样式 调整  bootstrap-custom  配置栅格。2…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"组件开发 --- Grid 栅格\",\n  \"date\": \"2019-03-11T00:00:00.000Z\",\n  \"tags\": \"Components\",\n  \"description\": \"栅格化系统，基于`行（row）`和`列（col）`布局外部框架，同时将整体区域按照 24 等分的原则进行划分。\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u4F7F\\u7528 Bootstrap\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://xsky-fe.github.io/wizard-ui/components/badge/\"\n  }), \"\\u4F7F\\u7528 Bootstrap \\u6784\\u5EFA 24 \\u6805\\u683C\\u7CFB\\u7EDF\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u6DFB\\u52A0 bootstrap sass \\u4F9D\\u8D56\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"yarn add bootstrap-sass\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u6DFB\\u52A0\\u4E24\\u4E2A\\u6587\\u4EF6 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bootstrap.scss\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bootstrap-custom.scss\"), \",\\u5E76\\u5F15\\u5165 bootstrap \\u9ED8\\u8BA4\\u6837\\u5F0F\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"@import 'bootstrap-custom';\\n@import '~bootstrap-sass/assets/stylesheets/_bootstrap';\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u8C03\\u6574 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bootstrap-custom\"), \" \\u914D\\u7F6E\\u6805\\u683C\\u300224 \\u6805\\u683C\\uFF0C\\u95F4\\u9694 16px\\u3002\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"//** Number of columns in the grid.\\n$grid-columns:              24 !default;\\n//** Padding between columns. Gets divided in half for the left and right.\\n$grid-gutter-width:         16px !default;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"使用 Bootstrap","depth":2}],"frontmatter":{"title":"组件开发 --- Grid 栅格","date":"2019-03-11","description":"栅格化系统，基于`行（row）`和`列（col）`布局外部框架，同时将整体区域按照 24 等分的原则进行划分。"}},"file":{"relativePath":"react-componnets-grid.pdf","publicURL":"/blog/static/react-componnets-grid-59222735d60ae2f0d0f89217e1a5a7b0.pdf"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-componnets-grid/","previous":{"fields":{"slug":"/regx-look-around/"},"frontmatter":{"title":"Regx look around"}},"next":{"fields":{"slug":"/prisma-starter/"},"frontmatter":{"title":"全栈 --- 启动 Prisma 项目"}}}}}