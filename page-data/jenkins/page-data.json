{"componentChunkName":"component---src-templates-blog-post-js","path":"/jenkins/","webpackCompilationHash":"fe4b98b4e443afde89a7","result":{"data":{"mdx":{"id":"6958a718-ed10-5c56-8a0b-4ab3e960ea80","excerpt":"持续集成 1.每一个环节都是自动完成\n2. 任意时间点都能发现软件集成问题，任意时间发布可部署软件。 通过 Docker 安装和启动 Jenkins","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Docker 启动 Jenkins 服务\",\n  \"date\": \"2018-10-09T00:00:00.000Z\",\n  \"tags\": \"Testing\",\n  \"description\": \"Jenkins 是由 Java 开发的开源项目，可以持续集成（自动编译、发布、测试）。它的前身是 Hundson。\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u6301\\u7EED\\u96C6\\u6210\"), mdx(\"p\", null, \"1.\\u6BCF\\u4E00\\u4E2A\\u73AF\\u8282\\u90FD\\u662F\\u81EA\\u52A8\\u5B8C\\u6210\\n2. \\u4EFB\\u610F\\u65F6\\u95F4\\u70B9\\u90FD\\u80FD\\u53D1\\u73B0\\u8F6F\\u4EF6\\u96C6\\u6210\\u95EE\\u9898\\uFF0C\\u4EFB\\u610F\\u65F6\\u95F4\\u53D1\\u5E03\\u53EF\\u90E8\\u7F72\\u8F6F\\u4EF6\\u3002\"), mdx(\"h2\", null, \"\\u901A\\u8FC7 Docker \\u5B89\\u88C5\\u548C\\u542F\\u52A8 Jenkins\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker pull jenkins\\n# \\u521B\\u5EFA\\u672C\\u5730\\u7684 Jenkins \\u914D\\u7F6E\\u6587\\u4EF6\\u76EE\\u5F55\\nmkdir /dir/jenkins_home\\ndocker run -d --name myjenkins -p 49001:8080 -v /dir/jenkins_home:/var/jenkins_home jenkins\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"持续集成","depth":2},{"value":"通过 Docker 安装和启动 Jenkins","depth":2}],"frontmatter":{"title":"Docker 启动 Jenkins 服务","date":"2018-10-09","description":"Jenkins 是由 Java 开发的开源项目，可以持续集成（自动编译、发布、测试）。它的前身是 Hundson。"}},"file":{"relativePath":"jenkins.pdf","publicURL":"/blog/static/jenkins-03da9f8daf80c688070c6af1e822abed.pdf"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/jenkins/","previous":{"fields":{"slug":"/express-redis/"},"frontmatter":{"title":"Docker 启动 Redis"}},"next":null}}}