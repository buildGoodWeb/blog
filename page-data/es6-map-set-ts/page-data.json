{"componentChunkName":"component---src-templates-blog-post-js","path":"/es6-map-set-ts/","webpackCompilationHash":"fe4b98b4e443afde89a7","result":{"data":{"mdx":{"id":"599dee23-2436-5c50-ac00-485898e8f3c9","excerpt":"Typescript 不支持 ES6 中的 Set 和 Map 方法，Github 上有 相关的讨论 。建议使用第三方库支持，\n比如  es6Collection ,  es6-shims ,  core-js  等。 Map 对比 对象只能用 字符串 作为键值，即 字符串-值 ，导致其使用有局限。 ES6 的 Map…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"ES6 Set、Map 在 Typescript 中的使用\",\n  \"date\": \"2019-09-09T00:00:00.000Z\",\n  \"tag\": \"ES6, Typescript\",\n  \"description\": \"ES6 中 Set 和 Map 介绍以及在 Typescript 的应用\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Typescript \\u4E0D\\u652F\\u6301 ES6 \\u4E2D\\u7684 Set \\u548C Map \\u65B9\\u6CD5\\uFF0CGithub \\u4E0A\\u6709\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Microsoft/TypeScript/issues/3069\"\n  }), \"\\u76F8\\u5173\\u7684\\u8BA8\\u8BBA\"), \"\\u3002\\u5EFA\\u8BAE\\u4F7F\\u7528\\u7B2C\\u4E09\\u65B9\\u5E93\\u652F\\u6301\\uFF0C\\n\\u6BD4\\u5982 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/WebReflection/es6-collections\"\n  }), \"es6Collection\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/es-shims/es6-shim\"\n  }), \"es6-shims\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/zloirock/core-js\"\n  }), \"core-js\"), \" \\u7B49\\u3002\"), mdx(\"h2\", null, \"Map\"), mdx(\"h3\", null, \"\\u5BF9\\u6BD4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5BF9\\u8C61\\u53EA\\u80FD\\u7528\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\u5B57\\u7B26\\u4E32\"), \"\\u4F5C\\u4E3A\\u952E\\u503C\\uFF0C\\u5373\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\u5B57\\u7B26\\u4E32-\\u503C\"), \"\\uFF0C\\u5BFC\\u81F4\\u5176\\u4F7F\\u7528\\u6709\\u5C40\\u9650\\u3002\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const obj = { a: 1 };\\nconst data = {};\\ndata[obj] = test;\\nObject.keys(data) // => [\\\"[object Object]\\\"]\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ES6 \\u7684 Map \\u505A\\u4E86\\u6269\\u5145\\uFF0C\\u652F\\u6301\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\u503C-\\u503C\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const obj = { a: 1 };\\nconst data = {};\\nconst m = new Map();\\nm.set(obj, 'test')\\nm.has(obj) // => true\\n\")), mdx(\"h3\", null, \"Typscript \\u4E2D\\u4F7F\\u7528\"), mdx(\"p\", null, \"\\u5B9A\\u4E49 Map \\u7C7B\\u578B\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Typescript\"\n  }), \"interface Map<K, V> {\\n  clear(): void;\\n  delete(key: K): boolean;\\n  entries(): IterableIterator<[K, V]>;\\n  forEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void;\\n  get(key: K): V;\\n  has(key: K): boolean;\\n  keys(): IterableIterator<K>;\\n  set(key: K, value?: V): Map<K, V>;\\n  size: number;\\n  values(): IterableIterator<V>;\\n  [Symbol.iterator](): IterableIterator<[K, V]>;\\n  [Symbol.toStringTag]: string;\\n}\\n\")), mdx(\"h2\", null, \"Set\"), mdx(\"h3\", null, \"Typscript \\u4E2D\\u4F7F\\u7528\"), mdx(\"p\", null, \"\\u5B9A\\u4E49 Set \\u7C7B\\u578B\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Typescript\"\n  }), \"interface Set<T> {\\n  add(value: T): Set<T>;\\n  clear(): void;\\n  delete(value: T): boolean;\\n  entries(): IterableIterator<[T, T]>;\\n  forEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void;\\n  has(value: T): boolean;\\n  keys(): IterableIterator<T>;\\n  size: number;\\n  values(): IterableIterator<T>;\\n  [Symbol.iterator]():IterableIterator<T>;\\n  [Symbol.toStringTag]: string;\\n}\\n\\ninterface SetConstructor {\\n  new <T>(): Set<T>;\\n  new <T>(iterable: Iterable<T>): Set<T>;\\n  prototype: Set<any>;\\n}\\ndeclare var Set: SetConstructor;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"Map","depth":2},{"value":"对比","depth":3},{"value":"Typscript 中使用","depth":3},{"value":"Set","depth":2},{"value":"Typscript 中使用","depth":3}],"frontmatter":{"title":"ES6 Set、Map 在 Typescript 中的使用","date":"2019-09-09","description":"ES6 中 Set 和 Map 介绍以及在 Typescript 的应用"}},"file":{"relativePath":"es6-map-set-ts.pdf","publicURL":"/blog/static/es6-map-set-ts-1d62d4822c71be707565af8d5dee3304.pdf"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/es6-map-set-ts/","previous":{"fields":{"slug":"/ts-type/"},"frontmatter":{"title":"Typescript 类型"}},"next":{"fields":{"slug":"/material-ui-icon/"},"frontmatter":{"title":"Material-ui Icon 组件调研"}}}}}