{"componentChunkName":"component---src-templates-blog-post-js","path":"/typescript-skill/","webpackCompilationHash":"fe4b98b4e443afde89a7","result":{"data":{"mdx":{"id":"c8613f6b-df30-59e0-888c-5c465d82a760","excerpt":"对象索引签名(Index signature) 使用  typeof  拿到类型定义 对象进行轮询操作： 误区 定义一个  indexSignature 然后添加类型访问 索引将类型定义为  any ，后导致后续无法进行类型推断检查，如果给对象每个  key  定义类型，右难以拓展维护（新  key…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Typescript 小技巧\",\n  \"date\": \"2019-08-19T00:00:00.000Z\",\n  \"tag\": \"Typescript\",\n  \"description\": \"收集 Typescript 使用小技巧。\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u5BF9\\u8C61\\u7D22\\u5F15\\u7B7E\\u540D(Index signature)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const VERSIONS = {\\n  v1: 'V1',\\n  v2: 'V2',\\n}\\n\")), mdx(\"p\", null, \"\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"typeof\"), \" \\u62FF\\u5230\\u7C7B\\u578B\\u5B9A\\u4E49\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"type VERSIONSType = typeof VERSIONS;\\n// \\u7B49\\u4EF7\\ntype VERSIONSType = {\\n  v1: string\\n  v2: string\\n}\\n\")), mdx(\"p\", null, \"\\u5BF9\\u8C61\\u8FDB\\u884C\\u8F6E\\u8BE2\\u64CD\\u4F5C\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Object.keys(VERSIONS).map(v => ({\\n  value: v,\\n  title: VERSIONS[v]\\n}))\\n// Throw Error\\n// => No index signature with a parameter\\n\")), mdx(\"h3\", null, \"\\u8BEF\\u533A\"), mdx(\"p\", null, \"\\u5B9A\\u4E49\\u4E00\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"indexSignature\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export interface IndexSignature {\\n  [key: string]: any;\\n}\\n\")), mdx(\"p\", null, \"\\u7136\\u540E\\u6DFB\\u52A0\\u7C7B\\u578B\\u8BBF\\u95EE\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Object.keys(VERSIONS).map(v => ({\\n  value: v,\\n  title: (VERSIONS as IndexSignature)[v]\\n}))\\n\")), mdx(\"p\", null, \"\\u7D22\\u5F15\\u5C06\\u7C7B\\u578B\\u5B9A\\u4E49\\u4E3A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"any\"), \"\\uFF0C\\u540E\\u5BFC\\u81F4\\u540E\\u7EED\\u65E0\\u6CD5\\u8FDB\\u884C\\u7C7B\\u578B\\u63A8\\u65AD\\u68C0\\u67E5\\uFF0C\\u5982\\u679C\\u7ED9\\u5BF9\\u8C61\\u6BCF\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"key\"), \" \\u5B9A\\u4E49\\u7C7B\\u578B\\uFF0C\\u53F3\\u96BE\\u4EE5\\u62D3\\u5C55\\u7EF4\\u62A4\\uFF08\\u65B0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"key\"), \" \\u52A0\\u5165\\u9700\\u8981\\u540C\\u6B65\\u66F4\\u6539\\uFF09\"), mdx(\"h3\", null, \"\\u6B63\\u89E3\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"keyof\"), \" \\u62FF\\u5230\\u5BF9\\u8C61\\u6240\\u6709 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"key\"), \" \\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"union\"), \" \\u7C7B\\u578B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"type VERSIONSKey = keyof typeof VERSIONS;\\n(Object.keys(VERSIONS) as VERSIONSKey[]).map(v => ({\\n  value: v,\\n  title: VERSIONS[v]\\n}))\\n\")), mdx(\"h3\", null, \"\\u5B9E\\u4F8B\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"() => {\\n  const VERSIONS = {\\n    v1: 'V1',\\n    v2: 'V2',\\n  }\\n  interface IndexSignature {\\n    [key: string]: any;\\n  }\\n  type VERSIONSKey = keyof typeof VERSIONS;\\n  return (\\n    <>\\n      <div>Bad</div>\\n      {Object.keys(VERSIONS).map(v => ({\\n        value: v,\\n        title: (VERSIONS as IndexSignature)[v]\\n      }))}\\n      <div>Good</div>\\n      (Object.keys(VERSIONS) as VERSIONSKey[]).map(v => ({\\n        value: v,\\n        title: VERSIONS[v]\\n      }))\\n    </>\\n  )\\n}\\n\")), mdx(\"h2\", null, \"\\u590D\\u5408\\u7C7B\\u578B\\u8F6C\\u6362\"), mdx(\"p\", null, \"Typescript \\u7684\\u590D\\u5408\\u7C7B\\u578B\\u5206\\u4E3A\\u4E24\\u7C7B\\uFF0C\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"set\"), \" \\u548C \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"map\"), \"\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"set \\u65E0\\u5E8F\\u7684\\u3001\\u65E0\\u91CD\\u590D\\u5143\\u7D20\\u7684\\u96C6\\u5408\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"map \\u6CA1\\u6709\\u91CD\\u590D\\u7684\\u952E\\u503C\\u5BF9\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// set\\ntype Size = 'sm' | 'md' | 'lg';\\n// map\\ninterface Ob {\\n  a: string\\n  b: number\\n}\\n\")), mdx(\"h3\", null, \"\\u8F6C\\u6362\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"type ObKeys = keyof Ob; // 'a' | 'b'\\ntype ObVals = Ob[keyof Ob] // string | number\\n\\ntype SizeMap = {\\n  [k in Size]: number\\n}\\n// \\u7B49\\u4EF7\\ntype SizeMap = {\\n  sm: number\\n  md: number\\n  lg: number\\n}\\n\")), mdx(\"h2\", null, \"\\u5E38\\u7528\\u5DE5\\u5177\"), mdx(\"h3\", null, \"set \\u8F6C map \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"Record<Set, type>\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"type Record<K extends keyof any, T> = { [P in K]: T };\\ntype Size = 'sm' | 'md' | 'lg';\\ntype SizeMap = Record<Size, number>\\n// type SizeMap = {\\n//   sm: number\\n//   md: number\\n//   lg: number\\n// }\\n\")), mdx(\"h3\", null, \"\\u9009 map \\u90E8\\u5206 \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"Pick<Map, Size>\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"type Pick<T, K extends keyof T> = { [P in K]: T[P] };\\ntype PickSizeMap = Pick<SizeMap, 'sm' | 'md'>;\\n// type SizeMap = {\\n//   sm: number\\n//   md: number\\n// }\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"对象索引签名(Index signature)","depth":2},{"value":"误区","depth":3},{"value":"正解","depth":3},{"value":"实例","depth":3},{"value":"复合类型转换","depth":2},{"value":"转换","depth":3},{"value":"常用工具","depth":2},{"value":"set 转 map Record<Set, type>","depth":3},{"value":"选 map 部分 Pick<Map, Size>","depth":3}],"frontmatter":{"title":"Typescript 小技巧","date":"2019-08-19","description":"收集 Typescript 使用小技巧。"}},"file":{"relativePath":"typescript-skill.pdf","publicURL":"/blog/static/typescript-skill-3772f94754ace70a30c04ab745b98533.pdf"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/typescript-skill/","previous":{"fields":{"slug":"/react-typescript/"},"frontmatter":{"title":"Typescript use in React"}},"next":{"fields":{"slug":"/fe-architecture/"},"frontmatter":{"title":"前端架构内容梳理"}}}}}